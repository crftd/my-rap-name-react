{"version":3,"sources":["assets/rapper.svg","assets/background.png","components/templates/Singleton/Singleton.jsx","components/molecules/FormGroup/FormGroup.jsx","components/molecules/ButtonGroup/ButtonGroup.jsx","components/atoms/DatePickerField/DatePickerField.jsx","components/atoms/TextField/TextField.jsx","components/organisms/NameForm/NameForm.jsx","components/organisms/NameBox/NameBox.jsx","services/rap-name.js","components/pages/Index/Index.jsx","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","Background","styled","div","_templateObject","props","backgroundUrl","FlexContainer","_templateObject2","MainWrapper","main","_templateObject3","Singleton","_ref","background","children","react_default","a","createElement","FormGroupWrapper","FormGroup_templateObject","FormGroup","ButtonGroupWrapper","ButtonGroup_templateObject","ButtonGroup","DatePickerField","field","form","other","Object","objectWithoutProperties","currentError","errors","name","material_ui_pickers_esm","utils","DateFnsUtils","assign","style","width","keyboard","value","format","helperText","error","Boolean","onError","_","setFieldError","onChange","date","setFieldValue","mask","TextField_TextField","TextField_default","label","initialValues","birthday","Date","nameFormSchema","Yup","shape","min","required","NameForm","onSubmit","formik_esm","validationSchema","component","TextField","Button_default","type","color","variant","NameBoxWrapper","NameBox_templateObject","NameBox","rapName","index_es","data-testid","height","icon","Avatar_default","marginTop","marginBottom","maxHeight","maxWidth","src","rapper","alt","RAP_NAMES","getRapName","functions","getRandomInt","length","max","Math","floor","random","theme","createMuiTheme","palette","primary","light","dark","contrastText","secondary","typography","useNextVariants","Index","_useState","useState","_useState2","slicedToArray","setRapName","styles","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c45763a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rapper.0293ca42.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.2550f23d.png\";","import React from 'react';\nimport styled from 'styled-components';\n\nconst Background = styled.div`\n  height: 100vh;\n  background: url(${props => props.backgroundUrl}) repeat 50% 50%;\n`;\n\nconst FlexContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nconst MainWrapper = styled.main`\n  width: 80%;\n  max-width: 600px;\n  padding: 20px;\n  background-color: rgba(255, 255, 255, 0.75);\n  border-radius: 20px;\n`;\n\nexport default ({ background, children }) => (\n  <Background backgroundUrl={background}>\n    <FlexContainer>\n      <MainWrapper>{children}</MainWrapper>\n    </FlexContainer>\n  </Background>\n);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst FormGroupWrapper = styled.div`\n  min-height: 70px;\n  padding-bottom: 10px;\n`;\n\nexport default ({ children }) => <FormGroupWrapper>{children}</FormGroupWrapper>;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonGroupWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ({ children }) => <ButtonGroupWrapper>{children}</ButtonGroupWrapper>;\n","import React from 'react';\nimport { DatePicker, MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nexport default ({ field, form, ...other }) => {\n  const currentError = form.errors[field.name];\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <DatePicker\n        style={{ width: '100%' }}\n        keyboard\n        name={field.name}\n        value={field.value}\n        format=\"dd/MM/yyyy\"\n        helperText={currentError}\n        error={Boolean(currentError)}\n        onError={(_, error) => form.setFieldError(field.name, error)}\n        onChange={date => form.setFieldValue(field.name, date, true)}\n        mask={value =>\n          value\n            ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]\n            : []\n        }\n        {...other}\n      />\n    </MuiPickersUtilsProvider>\n  );\n};\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default ({ field, form, ...other }) => (\n  <TextField\n    style={{ width: '100%' }}\n    label=\"Name\"\n    helperText={form.errors[field.name]}\n    error={Boolean(form.errors[field.name])}\n    {...field}\n    {...other}\n  />\n);\n","import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport Button from '@material-ui/core/Button';\nimport * as Yup from 'yup';\n\nimport FormGroup from '../../molecules/FormGroup/FormGroup.jsx';\nimport ButtonGroup from '../../molecules/ButtonGroup/ButtonGroup.jsx';\nimport DatePickerField from '../../atoms/DatePickerField/DatePickerField.jsx';\nimport TextField from '../../atoms/TextField/TextField.jsx';\n\nconst initialValues = {\n  name: '',\n  birthday: new Date(1993, 2, 4),\n};\n\nconst nameFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too short!')\n    .required('Required'),\n});\n\nexport default ({ onSubmit }) => (\n  <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={nameFormSchema}>\n    <Form>\n      <FormGroup>\n        <Field name=\"name\" component={TextField} />\n      </FormGroup>\n      <FormGroup>\n        <Field label=\"Birthday\" name=\"birthday\" component={DatePickerField} />\n      </FormGroup>\n      <ButtonGroup>\n        <Button type=\"submit\" color=\"primary\" variant=\"contained\">\n          Get my RAP name\n        </Button>\n      </ButtonGroup>\n    </Form>\n  </Formik>\n);\n","import React from 'react';\nimport { Chip } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport styled from 'styled-components';\n\nimport rapper from '../../../assets/rapper.svg';\n\nconst NameBoxWrapper = styled.div`\n  padding-top: 16px;\n  display: flex;\n  justify-content: center;\n`;\n\nexport default ({ rapName }) => (\n  <NameBoxWrapper>\n    <Chip\n      data-testid=\"rap-name\"\n      style={{ height: 'auto' }}\n      icon={\n        <Avatar\n          style={{\n            marginTop: 2,\n            marginBottom: 2,\n            maxHeight: 32,\n            maxWidth: 32,\n          }}\n          src={rapper}\n          alt=\"Rapper image\"\n        />\n      }\n      label={rapName}\n      color=\"secondary\"\n    />\n  </NameBoxWrapper>\n);\n","export const RAP_NAMES = ['SQWOZ BAB', 'Lil pump', 'XXXTENTACTION', 'FACE', 'Pasha Technique', 'Big Baby Tape'];\n\nexport const getRapName = () => RAP_NAMES[functions.getRandomInt(RAP_NAMES.length)];\n\nexport const getRandomInt = max => Math.floor(Math.random() * Math.floor(max));\n\nexport const functions = { getRandomInt };\n\nexport default getRapName;\n","import React, { useState } from 'react';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core';\nimport Singleton from '../../templates/Singleton/Singleton.jsx';\nimport NameForm from '../../organisms/NameForm/NameForm.jsx';\nimport NameBox from '../../organisms/NameBox/NameBox.jsx';\n\nimport background from '../../../assets/background.png';\n\nimport { getRapName } from '../../../services/rap-name';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#ff9f8f',\n      main: '#ff6d61',\n      dark: '#db413d',\n      contrastText: '#000',\n    },\n    secondary: {\n      light: '#ffcd50',\n      main: '#f99c17',\n      dark: '#c06d00',\n      contrastText: '#000',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default () => {\n  const [rapName, setRapName] = useState('Lil pimp');\n  function handleSubmit() {\n    setRapName(getRapName());\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Singleton background={background}>\n        <NameForm onSubmit={handleSubmit} />\n        <NameBox rapName={rapName} />\n      </Singleton>\n    </MuiThemeProvider>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.error(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport 'normalize.css';\n\nimport Index from './components/pages/Index/Index.jsx';\n\nexport default () => <Index />;\n"],"sourceRoot":""}